The specified profile (default) was not found in the file /home/kjoshi/.aws/credentials
Using single profile: 273854932432_Mesosphere-PowerUser
interactive=false
headless=false
package-registry=false
security=permissive
enterprise=true
Setting Gradle cache to /home/kjoshi/mwt-19/pre/dcos-jenkins-service/.gradle_cache
+ export DCOS_ENTERPRISE
+ export PYTHONUNBUFFERED=1
+ PYTHONUNBUFFERED=1
+ export SECURITY
+ export PACKAGE_REGISTRY_ENABLED
+ export PACKAGE_REGISTRY_STUB_URL
+ export DCOS_FILES_PATH
+++ dirname /build-tools/test_runner.sh
++ cd /build-tools
++ pwd
+ BUILD_TOOL_DIR=/build-tools
+ REPO_ROOT_DIR=/build
+ SINGLE_FRAMEWORK=True
+ '[' -z jenkins -o x == xTrue -o xjenkins == xall ']'
+ FRAMEWORK_LIST=jenkins
+ echo 'Using FRAMEWORK_LIST:\njenkins'
Using FRAMEWORK_LIST:\njenkins
+ echo 'PACKAGE_REGISTRY_ENABLED false'
PACKAGE_REGISTRY_ENABLED false
+ echo 'PACKAGE_REGISTRY_STUB_URL '
PACKAGE_REGISTRY_STUB_URL 
+ echo 'DCOS_FILES_PATH '
DCOS_FILES_PATH 
+ '[' -n 'https://universe-converter.mesosphere.com/transform?url=https://infinity-artifacts.s3.amazonaws.com/permanent/jenkins/assets/scale-test-jenkins-2.150.1/stub-universe-jenkins.json' ']'
+ '[' xTrue == xFalse ']'
+ echo 'Using provided STUB_UNIVERSE_URL: https://universe-converter.mesosphere.com/transform?url=https://infinity-artifacts.s3.amazonaws.com/permanent/jenkins/assets/scale-test-jenkins-2.150.1/stub-universe-jenkins.json'
Using provided STUB_UNIVERSE_URL: https://universe-converter.mesosphere.com/transform?url=https://infinity-artifacts.s3.amazonaws.com/permanent/jenkins/assets/scale-test-jenkins-2.150.1/stub-universe-jenkins.json
+ '[' -z https://mwt19.scaletesting.mesosphe.re ']'
+ [[ xpermissive == x\s\t\r\i\c\t ]]
+ echo 'Configuring dcoscli for cluster: https://mwt19.scaletesting.mesosphe.re'
Configuring dcoscli for cluster: https://mwt19.scaletesting.mesosphe.re
+ echo '\tDCOS_ENTERPRISE=true'
\tDCOS_ENTERPRISE=true
+ /build/tools/dcos_login.py
[2019-08-15 22:43:08,083|__main__|INFO]: No ACS token provided, logging in...
[2019-08-15 22:43:08,083|__main__|INFO]: logging into https://mwt19.scaletesting.mesosphe.re as dcos-dev
/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)
[2019-08-15 22:43:15,367|__main__|INFO]: Login was successful!
[2019-08-15 22:43:15,368|dcos.util|INFO]: Creating directory: '/root/.dcos/clusters'
[2019-08-15 22:43:15,369|__main__|WARNING]: Target cluster has not been setup yet. Performing setup...
[2019-08-15 22:43:15,369|dcos.util|INFO]: Creating directory: '/root/.dcos/clusters/setup'
[2019-08-15 22:43:15,385|dcos.config|INFO]: Comparing changes in the configuration...
[2019-08-15 22:43:15,385|dcos.config|INFO]: Errors before the config command: []
[2019-08-15 22:43:15,385|dcos.config|INFO]: Errors after the config command: []
[2019-08-15 22:43:15,388|dcos.config|INFO]: Comparing changes in the configuration...
[2019-08-15 22:43:15,388|dcos.config|INFO]: Errors before the config command: []
[2019-08-15 22:43:15,388|dcos.config|INFO]: Errors after the config command: []
[2019-08-15 22:43:15,390|dcos.config|INFO]: Comparing changes in the configuration...
[2019-08-15 22:43:15,391|dcos.config|INFO]: Errors before the config command: []
[2019-08-15 22:43:15,391|dcos.config|INFO]: Errors after the config command: []
[2019-08-15 22:43:15,394|dcos.http|INFO]: Sending HTTP ['get'] to ['https://mwt19.scaletesting.mesosphe.re/metadata']: {'Accept': 'application/json'}
[2019-08-15 22:43:17,315|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:17 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:43:17,316|dcos.util|INFO]: Creating directory: '/root/.dcos/clusters/d85acb99-718e-4b24-a9d0-63a3638bcd90'
[2019-08-15 22:43:17,321|dcos.http|INFO]: Sending HTTP ['get'] to ['https://mwt19.scaletesting.mesosphe.re/mesos/state-summary']: {'Accept': 'application/json'}
[2019-08-15 22:43:19,955|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:19 GMT', 'Content-Type': 'application/json', 'Content-Length': '192608', 'Connection': 'keep-alive', 'Server': 'openresty', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:19,993|dcos.config|INFO]: Comparing changes in the configuration...
[2019-08-15 22:43:19,993|dcos.config|INFO]: Errors before the config command: []
[2019-08-15 22:43:19,993|dcos.config|INFO]: Errors after the config command: []
++ ssh-agent -s
+ eval 'SSH_AUTH_SOCK=/tmp/ssh-MddiJxQu6XjQ/agent.12; export SSH_AUTH_SOCK;
SSH_AGENT_PID=13; export SSH_AGENT_PID;
echo Agent pid 13;'
++ SSH_AUTH_SOCK=/tmp/ssh-MddiJxQu6XjQ/agent.12
++ export SSH_AUTH_SOCK
++ SSH_AGENT_PID=13
++ export SSH_AGENT_PID
++ echo Agent pid 13
Agent pid 13
+ '[' -f /ssh/key ']'
+ ssh-add /ssh/key
Identity added: /ssh/key (/ssh/key)
+ '[' -f /build/cluster_info.json ']'
+ pytest_args=()
++ echo '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"'
++ sed -e 's#.*-k [\'\''"]\([^\'\''"]*\)['\''"].*#\1#'
+ PYTEST_K='--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"'
+ '[' '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"' '!=' '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"' ']'
++ echo '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"'
++ sed -e 's#.*-m [\'\''"]\([^\'\''"]*\)['\''"].*#\1#'
+ PYTEST_M=scale
+ '[' scale '!=' '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"' ']'
+ '[' -n scale ']'
+ pytest_args+=(-m "$PYTEST_M")
++ echo '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True -m "scale"'
++ sed -e 's#-m [\'\''"]\([^\'\''"]*\)['\''"]##'
+ PYTEST_ARGS='--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True '
+ '[' -n '--jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True ' ']'
+ pytest_args+=($PYTEST_ARGS)
+ '[' -n ']'
+ '[' -d /build/testing ']'
+ export PYTHONPATH=/build/testing
+ PYTHONPATH=/build/testing
+ '[' -d /build/tests ']'
+ FRAMEWORK_TESTS_DIR=/build/tests
++ date
+ echo 'Starting test for /build/tests with pytest args [-m' scale --jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True '--single-use=True] at Thu' Aug 15 22:43:20 UTC 2019
Starting test for /build/tests with pytest args [-m scale --jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True] at Thu Aug 15 22:43:20 UTC 2019
+ py.test -vv -s -m scale --jobs=5 --work-duration=3600 --scenario=sleep --min=2001 --max=2019 --batch-size=20 --run-delay=60 --create-framework=False --create-jobs=True --single-use=True /build/tests
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.6.8, pytest-4.1.0, py-1.7.0, pluggy-0.8.1 -- /usr/bin/python3
cachedir: .pytest_cache
rootdir: /build, inifile:
plugins: teamcity-messages-1.21, timeout-1.3.3, dcos-test-utils-0.1
[1mcollecting ... [0m[1mcollected 17 items / 16 deselected                                             [0m

tests/scale/test_load.py::test_scaling_load [2019-08-15 22:43:20,954|dcos.marathon|INFO]: Creating marathon client with: 'https://mwt19.scaletesting.mesosphe.re/service/marathon/'
[2019-08-15 22:43:20,954|sdk_security|INFO]: Installing DC/OS enterprise CLI
[2019-08-15 22:43:20,954|sdk_cmd|INFO]: (CLI) dcos security --version
[2019-08-15 22:43:21,389|sdk_cmd|INFO]: (CLI) dcos package install --yes --cli dcos-enterprise-cli
[2019-08-15 22:43:48,181|sdk_cmd|INFO]: STDOUT:
By Deploying, you agree to the Terms and Conditions https://mesosphere.com/catalog-terms-conditions/#certified-services
Installing CLI subcommand for package [dcos-enterprise-cli] version [1.13-patch.1]
New commands available: dcos backup, dcos security, dcos license
[2019-08-15 22:43:48,181|sdk_cmd|INFO]: STDERR:
Extracting "dcos-core-cli"...
Warning: The attached cluster is running DC/OS 1.13 but this CLI only supports DC/OS 1.12.
[2019-08-15 22:43:48,184|sdk_cmd|INFO]: (HTTP GET) /dcos-metadata/bootstrap-config.json
[2019-08-15 22:43:48,186|dcos.http|INFO]: Sending HTTP ['GET'] to ['https://mwt19.scaletesting.mesosphe.re/dcos-metadata/bootstrap-config.json']: {'Accept': 'application/json'}
[2019-08-15 22:43:48,190|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:49,131|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "GET /dcos-metadata/bootstrap-config.json HTTP/1.1" 200 852
[2019-08-15 22:43:49,132|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:48 GMT', 'Content-Type': 'application/json', 'Content-Length': '852', 'Connection': 'keep-alive', 'Server': 'openresty', 'Last-Modified': 'Thu, 15 Aug 2019 14:10:21 GMT', 'ETag': '"5d5567cd-354"', 'Accept-Ranges': 'bytes'}
[2019-08-15 22:43:49,132|dcos.util|DEBUG]: duration: dcos.http._request: 0.95s
[2019-08-15 22:43:49,132|sdk_cmd|INFO]: Got 200 for GET /dcos-metadata/bootstrap-config.json
[2019-08-15 22:43:49,132|test_load|INFO]: 

Creating jenkins jobs for: [{'jenkins2003', 'jenkins2008', 'jenkins2018', 'jenkins2013', 'jenkins2016', 'jenkins2012', 'jenkins2015', 'jenkins2002', 'jenkins2001', 'jenkins2009', 'jenkins2010', 'jenkins2014', 'jenkins2007', 'jenkins2011', 'jenkins2004', 'jenkins2006', 'jenkins2017', 'jenkins2005'}]


[2019-08-15 22:43:49,133|test_load|INFO]: Re-authenticating current batch load of jenkins0 - jenkins20 to prevent auth-timeouts on scale cluster.
[2019-08-15 22:43:49,133|tools.dcos_login|INFO]: No ACS token provided, logging in...
[2019-08-15 22:43:49,133|tools.dcos_login|INFO]: logging into https://mwt19.scaletesting.mesosphe.re as dcos-dev
[2019-08-15 22:43:49,134|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,403|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /acs/api/v1/auth/login HTTP/1.1" 200 445
[2019-08-15 22:43:50,405|tools.dcos_login|INFO]: Login was successful!
[2019-08-15 22:43:50,407|tools.dcos_login|INFO]: Attached to already setup cluster: d85acb99-718e-4b24-a9d0-63a3638bcd90
[2019-08-15 22:43:50,408|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,408|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,409|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,409|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,409|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,410|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,410|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,411|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,412|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,413|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,413|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,414|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,416|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,417|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2018/scriptText
[2019-08-15 22:43:50,417|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2003/scriptText
[2019-08-15 22:43:50,453|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2003/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,418|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,421|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2013/scriptText
[2019-08-15 22:43:50,421|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,422|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2016/scriptText
[2019-08-15 22:43:50,422|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,423|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,425|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2008/scriptText
[2019-08-15 22:43:50,428|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2012/scriptText
[2019-08-15 22:43:50,445|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,446|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2001/scriptText
[2019-08-15 22:43:50,451|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2010/scriptText
[2019-08-15 22:43:50,420|jenkins_remote_access|INFO]: 
Making request : ========

import org.jenkinsci.plugins.mesos.MesosCloud;
import org.jenkinsci.plugins.mesos.MesosSlaveInfo;
import org.apache.mesos.Protos;
import hudson.slaves.NodeProperty;
import jenkins.model.*
import org.jenkinsci.plugins.mesos.MesosSlaveInfo.URI;
import hudson.tasks.*;
import com.cloudbees.hudson.plugins.folder.Folder;

def containerInfo = new MesosSlaveInfo.ContainerInfo(
                "DOCKER",
                "mesosphere/jenkins-dind:scale",
                true,
                false,
                false,
                true,
                "wrapper.sh",
                new LinkedList<MesosSlaveInfo.Volume>(),
                new LinkedList<MesosSlaveInfo.Parameter>(),
                Protos.ContainerInfo.DockerInfo.Network.BRIDGE.name(),
                new LinkedList<MesosSlaveInfo.PortMapping>(),
                new LinkedList<MesosSlaveInfo.NetworkInfo>()
)

def additionalURIs = new LinkedList<URI>()
additionalURIs.add(new URI("file:///etc/docker/docker.tar.gz", false, true))

def mesosSlaveInfo = new MesosSlaveInfo(
        "mesos",
        Node.Mode.NORMAL,
        "0.1",
        "256",
        "1",
        "1",
        "0.3",
        "0.0",
        "1800",
        "jenkins",
        "1",
        "",
        "-Xms16m -XX:+UseConcMarkSweepGC -Djava.net.preferIPv4Stack=true",
        "-noReconnect",
        "false",
        containerInfo,
        new LinkedList<URI>(),
        new LinkedList<? extends NodeProperty<?>>()
)

MesosCloud cloud = MesosCloud.get();
cloud.getSlaveInfos().add(mesosSlaveInfo)
cloud.getSlaveInfos().each {
        t ->
            println("Label : " + t.getLabelString())
}

========

[2019-08-15 22:43:50,456|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,458|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2007/scriptText
[2019-08-15 22:43:50,468|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2014/scriptText
[2019-08-15 22:43:50,482|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2015/scriptText
[2019-08-15 22:43:50,487|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2002/scriptText
[2019-08-15 22:43:50,488|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2011/scriptText
[2019-08-15 22:43:50,491|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2009/scriptText
[2019-08-15 22:43:50,501|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2006/scriptText
[2019-08-15 22:43:50,503|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,509|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2016/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,511|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2005/scriptText
[2019-08-15 22:43:50,523|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2010/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,525|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2012/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,529|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2013/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,532|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2008/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,547|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2001/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,558|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2015/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,560|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2007/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,563|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,565|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2014/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,568|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,569|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2017/scriptText
[2019-08-15 22:43:50,572|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,576|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,582|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,585|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2002/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,587|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2011/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,589|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,591|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2006/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,593|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,596|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,600|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,602|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2004/scriptText
[2019-08-15 22:43:50,604|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2009/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,607|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2005/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,610|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2017/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,615|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,619|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,622|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,626|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,628|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,631|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:50,635|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2004/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:50,640|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:51,285|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:43:51,287|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:43:51 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:43:51,287|dcos.util|DEBUG]: duration: dcos.http._request: 0.84s
[2019-08-15 22:43:51,287|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:43:51,287|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:43:52,291|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:52,292|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:53,231|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:43:53,232|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:43:53 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:43:53,232|dcos.util|DEBUG]: duration: dcos.http._request: 0.94s
[2019-08-15 22:43:53,232|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:43:53,232|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:43:54,240|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:54,245|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,554|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:43:55,554|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:43:55,555|dcos.util|DEBUG]: duration: dcos.http._request: 1.32s
[2019-08-15 22:43:55,555|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:43:55,555|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:43:55,601|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2004/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,602|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,602|dcos.util|DEBUG]: duration: dcos.http._request: 4.97s
[2019-08-15 22:43:55,602|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2004/scriptText (args: ['data'])
[2019-08-15 22:43:55,605|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2004/createItem?name=generator-job
[2019-08-15 22:43:55,608|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2004/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,610|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,726|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2009/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,728|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,728|dcos.util|DEBUG]: duration: dcos.http._request: 5.12s
[2019-08-15 22:43:55,728|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2009/scriptText (args: ['data'])
[2019-08-15 22:43:55,731|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2009/createItem?name=generator-job
[2019-08-15 22:43:55,733|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2009/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,735|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,780|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2006/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,781|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2003/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,781|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,782|dcos.util|DEBUG]: duration: dcos.http._request: 5.19s
[2019-08-15 22:43:55,783|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,783|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2006/scriptText (args: ['data'])
[2019-08-15 22:43:55,783|dcos.util|DEBUG]: duration: dcos.http._request: 5.33s
[2019-08-15 22:43:55,783|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2003/scriptText (args: ['data'])
[2019-08-15 22:43:55,788|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2006/createItem?name=generator-job
[2019-08-15 22:43:55,790|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2003/createItem?name=generator-job
[2019-08-15 22:43:55,794|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2003/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,797|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,799|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2006/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,802|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,803|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2013/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,805|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,805|dcos.util|DEBUG]: duration: dcos.http._request: 5.28s
[2019-08-15 22:43:55,805|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2013/scriptText (args: ['data'])
[2019-08-15 22:43:55,810|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2013/createItem?name=generator-job
[2019-08-15 22:43:55,814|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2013/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,816|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,899|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2010/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,900|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,900|dcos.util|DEBUG]: duration: dcos.http._request: 5.38s
[2019-08-15 22:43:55,900|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2010/scriptText (args: ['data'])
[2019-08-15 22:43:55,904|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2010/createItem?name=generator-job
[2019-08-15 22:43:55,907|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2010/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,910|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,913|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2011/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,914|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,915|dcos.util|DEBUG]: duration: dcos.http._request: 5.33s
[2019-08-15 22:43:55,915|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2011/scriptText (args: ['data'])
[2019-08-15 22:43:55,918|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2011/createItem?name=generator-job
[2019-08-15 22:43:55,920|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2011/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,921|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,962|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2001/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:55,963|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:55,964|dcos.util|DEBUG]: duration: dcos.http._request: 5.42s
[2019-08-15 22:43:55,964|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2001/scriptText (args: ['data'])
[2019-08-15 22:43:55,968|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2001/createItem?name=generator-job
[2019-08-15 22:43:55,971|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2001/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:55,973|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:55,999|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2008/scriptText HTTP/1.1" 200 108
[2019-08-15 22:43:56,000|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '108', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,001|dcos.util|DEBUG]: duration: dcos.http._request: 5.47s
[2019-08-15 22:43:56,001|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2008/scriptText (args: ['data'])
[2019-08-15 22:43:56,007|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2008/createItem?name=generator-job
[2019-08-15 22:43:56,009|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2012/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:56,011|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:55 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,011|dcos.util|DEBUG]: duration: dcos.http._request: 5.49s
[2019-08-15 22:43:56,013|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2012/scriptText (args: ['data'])
[2019-08-15 22:43:56,018|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2008/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,019|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,021|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2012/createItem?name=generator-job
[2019-08-15 22:43:56,024|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2012/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,027|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,266|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2007/scriptText HTTP/1.1" 200 108
[2019-08-15 22:43:56,267|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '108', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,267|dcos.util|DEBUG]: duration: dcos.http._request: 5.71s
[2019-08-15 22:43:56,267|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2007/scriptText (args: ['data'])
[2019-08-15 22:43:56,270|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2007/createItem?name=generator-job
[2019-08-15 22:43:56,272|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2007/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,274|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,306|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2005/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:56,307|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,307|dcos.util|DEBUG]: duration: dcos.http._request: 5.70s
[2019-08-15 22:43:56,308|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2005/scriptText (args: ['data'])
[2019-08-15 22:43:56,312|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2005/createItem?name=generator-job
[2019-08-15 22:43:56,315|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2005/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,317|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,558|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:56,563|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,587|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2014/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:56,588|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,588|dcos.util|DEBUG]: duration: dcos.http._request: 6.02s
[2019-08-15 22:43:56,589|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2014/scriptText (args: ['data'])
[2019-08-15 22:43:56,593|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2014/createItem?name=generator-job
[2019-08-15 22:43:56,595|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2014/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,597|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,710|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2017/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:56,711|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2016/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:56,712|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,712|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:56,712|dcos.util|DEBUG]: duration: dcos.http._request: 6.10s
[2019-08-15 22:43:56,713|dcos.util|DEBUG]: duration: dcos.http._request: 6.20s
[2019-08-15 22:43:56,713|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2017/scriptText (args: ['data'])
[2019-08-15 22:43:56,713|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2016/scriptText (args: ['data'])
[2019-08-15 22:43:56,718|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2017/createItem?name=generator-job
[2019-08-15 22:43:56,719|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2016/createItem?name=generator-job
[2019-08-15 22:43:56,723|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2017/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,725|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,727|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2016/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:56,729|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,803|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2004/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:56,804|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:56,804|dcos.util|DEBUG]: duration: dcos.http._request: 1.20s
[2019-08-15 22:43:56,804|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2004/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:56,804|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:56,806|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2009/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:56,809|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:56,811|dcos.util|DEBUG]: duration: dcos.http._request: 1.08s
[2019-08-15 22:43:56,811|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2009/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:56,812|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:56,812|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2004/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:56,815|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2009/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:56,819|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2004/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:56,820|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,822|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2009/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:56,823|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,939|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2011/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:56,941|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:56,941|dcos.util|DEBUG]: duration: dcos.http._request: 1.02s
[2019-08-15 22:43:56,941|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2011/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:56,942|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:56,944|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2011/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:56,947|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2011/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:56,948|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:56,976|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2008/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:56,978|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:56,979|dcos.util|DEBUG]: duration: dcos.http._request: 0.96s
[2019-08-15 22:43:56,979|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2008/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:56,979|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:56,983|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2008/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:56,988|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2008/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:56,991|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,024|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2012/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,025|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,026|dcos.util|DEBUG]: duration: dcos.http._request: 1.00s
[2019-08-15 22:43:57,026|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2012/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,026|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,029|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2012/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,033|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2012/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,036|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,089|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2013/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,090|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,091|dcos.util|DEBUG]: duration: dcos.http._request: 1.28s
[2019-08-15 22:43:57,091|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2013/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,092|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,095|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2013/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,098|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2006/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,100|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:56 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,100|dcos.util|DEBUG]: duration: dcos.http._request: 1.30s
[2019-08-15 22:43:57,100|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2006/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,101|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,101|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2013/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,103|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,105|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2006/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,108|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2006/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,111|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,121|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2010/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,123|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,124|dcos.util|DEBUG]: duration: dcos.http._request: 1.22s
[2019-08-15 22:43:57,124|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2010/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,125|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,130|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2010/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,134|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2010/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,137|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,180|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2003/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,181|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,182|dcos.util|DEBUG]: duration: dcos.http._request: 1.39s
[2019-08-15 22:43:57,182|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2003/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,183|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,186|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2003/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,190|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2003/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,195|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,254|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2001/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,257|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,257|dcos.util|DEBUG]: duration: dcos.http._request: 1.29s
[2019-08-15 22:43:57,258|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2001/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,258|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,262|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2001/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,265|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2001/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,268|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,290|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:43:57,293|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:43:57,293|dcos.util|DEBUG]: duration: dcos.http._request: 0.74s
[2019-08-15 22:43:57,294|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:43:57,294|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:43:57,307|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2007/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,308|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,308|dcos.util|DEBUG]: duration: dcos.http._request: 1.04s
[2019-08-15 22:43:57,308|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2007/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,308|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,311|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2007/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,316|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2007/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,322|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,324|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2005/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,328|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,328|dcos.util|DEBUG]: duration: dcos.http._request: 1.01s
[2019-08-15 22:43:57,328|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2005/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,329|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,333|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2005/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,341|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2005/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,343|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,452|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2002/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:57,453|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:57,454|dcos.util|DEBUG]: duration: dcos.http._request: 6.87s
[2019-08-15 22:43:57,454|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2002/scriptText (args: ['data'])
[2019-08-15 22:43:57,458|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2002/createItem?name=generator-job
[2019-08-15 22:43:57,461|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2002/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:57,465|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:57,618|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2014/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:57,619|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:57,619|dcos.util|DEBUG]: duration: dcos.http._request: 1.02s
[2019-08-15 22:43:57,620|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2014/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:57,620|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:57,622|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2014/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:57,624|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2014/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:57,625|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:58,006|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2017/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:58,008|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:58,008|dcos.util|DEBUG]: duration: dcos.http._request: 1.29s
[2019-08-15 22:43:58,009|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2017/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:58,009|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:58,013|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2017/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,020|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2017/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:58,023|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:58,076|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2008/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,078|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2008/queue/item/1/'}
[2019-08-15 22:43:58,078|dcos.util|DEBUG]: duration: dcos.http._request: 1.09s
[2019-08-15 22:43:58,078|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2008/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,089|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2004/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,091|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:57 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2004/queue/item/1/'}
[2019-08-15 22:43:58,092|dcos.util|DEBUG]: duration: dcos.http._request: 1.27s
[2019-08-15 22:43:58,092|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2004/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,107|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2016/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:58,108|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:58,108|dcos.util|DEBUG]: duration: dcos.http._request: 1.38s
[2019-08-15 22:43:58,109|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2016/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:58,109|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:58,113|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2016/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,118|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2016/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:58,121|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:58,126|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2015/scriptText HTTP/1.1" 200 109
[2019-08-15 22:43:58,128|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Content-Type': 'text/plain;charset=utf-8', 'Content-Length': '109', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip'}
[2019-08-15 22:43:58,128|dcos.util|DEBUG]: duration: dcos.http._request: 7.57s
[2019-08-15 22:43:58,128|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2015/scriptText (args: ['data'])
[2019-08-15 22:43:58,135|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2015/createItem?name=generator-job
[2019-08-15 22:43:58,139|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2015/createItem?name=generator-job']: {'Content-Type': 'application/xml'}
[2019-08-15 22:43:58,142|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:58,176|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2003/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,177|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2003/queue/item/1/'}
[2019-08-15 22:43:58,178|dcos.util|DEBUG]: duration: dcos.http._request: 0.99s
[2019-08-15 22:43:58,178|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2003/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,202|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2009/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,203|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2011/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,206|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2009/queue/item/1/'}
[2019-08-15 22:43:58,206|dcos.util|DEBUG]: duration: dcos.http._request: 1.38s
[2019-08-15 22:43:58,206|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2009/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,207|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2011/queue/item/1/'}
[2019-08-15 22:43:58,207|dcos.util|DEBUG]: duration: dcos.http._request: 1.26s
[2019-08-15 22:43:58,207|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2011/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,208|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2012/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,209|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2012/queue/item/1/'}
[2019-08-15 22:43:58,210|dcos.util|DEBUG]: duration: dcos.http._request: 1.18s
[2019-08-15 22:43:58,210|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2012/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,294|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2013/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,296|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2013/queue/item/1/'}
[2019-08-15 22:43:58,297|dcos.util|DEBUG]: duration: dcos.http._request: 1.20s
[2019-08-15 22:43:58,297|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2013/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,299|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2010/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,302|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2010/queue/item/1/'}
[2019-08-15 22:43:58,302|dcos.util|DEBUG]: duration: dcos.http._request: 1.17s
[2019-08-15 22:43:58,303|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2010/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,308|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:43:58,313|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:58,497|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2005/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,498|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2005/queue/item/1/'}
[2019-08-15 22:43:58,498|dcos.util|DEBUG]: duration: dcos.http._request: 1.16s
[2019-08-15 22:43:58,498|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2005/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,567|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2002/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:58,568|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:58,568|dcos.util|DEBUG]: duration: dcos.http._request: 1.11s
[2019-08-15 22:43:58,568|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2002/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:58,568|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:58,570|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2002/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,572|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2002/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:58,574|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:43:58,586|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2007/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,587|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2007/queue/item/1/'}
[2019-08-15 22:43:58,587|dcos.util|DEBUG]: duration: dcos.http._request: 1.27s
[2019-08-15 22:43:58,587|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2007/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,771|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2006/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,772|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2006/queue/item/1/'}
[2019-08-15 22:43:58,772|dcos.util|DEBUG]: duration: dcos.http._request: 1.66s
[2019-08-15 22:43:58,772|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2006/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:58,883|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2014/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:58,884|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2014/queue/item/1/'}
[2019-08-15 22:43:58,884|dcos.util|DEBUG]: duration: dcos.http._request: 1.26s
[2019-08-15 22:43:58,884|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2014/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:59,020|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:43:59,020|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:43:58 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:43:59,020|dcos.util|DEBUG]: duration: dcos.http._request: 0.71s
[2019-08-15 22:43:59,020|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:43:59,021|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:43:59,152|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2001/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:59,152|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:59 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2001/queue/item/1/'}
[2019-08-15 22:43:59,153|dcos.util|DEBUG]: duration: dcos.http._request: 1.89s
[2019-08-15 22:43:59,153|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2001/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:59,204|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2016/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:59,205|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:59 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2016/queue/item/1/'}
[2019-08-15 22:43:59,205|dcos.util|DEBUG]: duration: dcos.http._request: 1.09s
[2019-08-15 22:43:59,205|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2016/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:59,394|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2017/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:43:59,394|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:43:59 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2017/queue/item/1/'}
[2019-08-15 22:43:59,394|dcos.util|DEBUG]: duration: dcos.http._request: 1.37s
[2019-08-15 22:43:59,394|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2017/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:59,534|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2015/createItem?name=generator-job HTTP/1.1" 200 None
[2019-08-15 22:43:59,534|dcos.http|INFO]: Received HTTP response [200]: {'Date': 'Thu, 15 Aug 2019 22:43:59 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff'}
[2019-08-15 22:43:59,534|dcos.util|DEBUG]: duration: dcos.http._request: 1.40s
[2019-08-15 22:43:59,534|sdk_cmd|INFO]: Got 200 for POST /service/jenkins2015/createItem?name=generator-job (args: {'data': b'<?xml version=\'1.0\' encoding=\'utf8\'?>\n<project>\n    <actions />\n    <description />\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>SINGLE_USE</name>\n                    <description>Percentage of jobs that should be Single Use mesos agent.</description>\n                    <defaultValue>100</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>AGENT_LABEL</name>\n                    <description>Job runs restricted to this label.</description>\n                    <defaultValue />\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>JOBCOUNT</name>\n                    <description>The number of jobs to create and manage.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>EVERY_XMIN</name>\n                    <description>Every X minutes run this job.</description>\n                    <defaultValue>5</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SLEEP_DURATION</name>\n                    <description>Job sleeps for this many seconds.</description>\n                    <defaultValue>600</defaultValue>\n                    <trim>false</trim>\n                </hudson.model.StringParameterDefinition>\n                <hudson.model.StringParameterDefinition>\n                    <name>SCENARIO</name>\n                    <description>Test scenario to run.</description>\n                    <defaultValue>sleep</defaultValue>\n                    <trim>true</trim>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class="hudson.scm.NullSCM" />\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers />\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.69">\n            <scriptText>def singleP = "${SINGLE_USE}" as Integer\n                def jobCount = "${JOBCOUNT}" as Integer\n                def agentLabel = "${AGENT_LABEL}" as String\n                def sleepDur = "${SLEEP_DURATION}" as Integer\n                def everyMin = "${EVERY_XMIN}" as Integer\n\n                Random random = new Random()\n\n                (1..jobCount).each { c -&gt;\n                def jobName = "test-job-${c}"\n\n                def j = job(jobName) {\n                if (agentLabel) {\n                label(agentLabel)\n                }\n\n                triggers {\n                cron("*/${EVERY_XMIN} * * * *")\n                }\n\n                wrappers {\n                    if (singleP == 100 || (singleP != 0 &amp;&amp; Math.abs(random.nextInt() % 100) + 1 &lt;= singleP)) {\n                        configure { node -&gt;\n                        node / \'buildWrappers\' / \'org.jenkinsci.plugins.mesos.MesosSingleUseSlave\'()\n                        }\n                    }\n                }\n\n                if (SCENARIO == "buildmarathon") {\n                    scm {\n                        git {\n                            remote {\n                                name(\'origin\')\n                                url(\'https://github.com/mesosphere/marathon.git\')\n                            }\n                            branches(\'v1.6.352\')\n                        }\n                    }\n                }\n\n                steps {\n                    if (SCENARIO == "buildmarathon") {\n                       shell(\' export SBT_OPTS="-Xmx750M -Xms750M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xss2M"; curl -LO https://piccolo.link/sbt-1.1.2.tgz; tar -zxf sbt*.tgz; sbt/bin/sbt compile; \')\n                    } else {\n                        shell("echo \'hello, world\'; sleep ${sleepDur}")\n                    }\n                }\n\n                }\n                queue(j)\n\n                }\n            </scriptText>\n            <usingScriptText>true</usingScriptText>\n            <sandbox>false</sandbox>\n            <ignoreExisting>false</ignoreExisting>\n            <ignoreMissingFiles>false</ignoreMissingFiles>\n            <failOnMissingPlugin>false</failOnMissingPlugin>\n            <unstableOnDeprecation>false</unstableOnDeprecation>\n            <removedJobAction>DELETE</removedJobAction>\n            <removedViewAction>DELETE</removedViewAction>\n            <removedConfigFilesAction>DELETE</removedConfigFilesAction>\n            <lookupStrategy>JENKINS_ROOT</lookupStrategy>\n        </javaposse.jobdsl.plugin.ExecuteDslScripts>\n    </builders>\n    <publishers />\n    <buildWrappers />\n</project>', 'headers': {'Content-Type': 'application/xml'}})
[2019-08-15 22:43:59,534|test_load|INFO]: Launching 5 jobs every 60 minutes with single-use (True).
[2019-08-15 22:43:59,536|sdk_cmd|INFO]: (HTTP POST) /service/jenkins2015/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:43:59,537|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2015/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep']: {'Accept': 'application/json'}
[2019-08-15 22:43:59,538|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:00,023|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:00,024|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:00,287|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2002/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:44:00,288|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:44:00 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2002/queue/item/1/'}
[2019-08-15 22:44:00,288|dcos.util|DEBUG]: duration: dcos.http._request: 1.72s
[2019-08-15 22:44:00,289|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2002/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:44:00,804|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:00,805|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:00 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:00,806|dcos.util|DEBUG]: duration: dcos.http._request: 0.78s
[2019-08-15 22:44:00,806|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:00,806|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:01,015|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2015/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep HTTP/1.1" 201 None
[2019-08-15 22:44:01,016|dcos.http|INFO]: Received HTTP response [201]: {'Date': 'Thu, 15 Aug 2019 22:44:00 GMT', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty', 'X-Content-Type-Options': 'nosniff', 'Location': 'https://mwt19.scaletesting.mesosphe.re/service/jenkins2015/queue/item/1/'}
[2019-08-15 22:44:01,017|dcos.util|DEBUG]: duration: dcos.http._request: 1.48s
[2019-08-15 22:44:01,017|sdk_cmd|INFO]: Got 201 for POST /service/jenkins2015/job/generator-job/buildWithParameters?JOBCOUNT=5&AGENT_LABEL=mesos&SINGLE_USE=100&EVERY_XMIN=60&SLEEP_DURATION=3600&SCENARIO=sleep
[2019-08-15 22:44:01,815|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:01,820|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:02,883|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:02,886|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:02 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:02,887|dcos.util|DEBUG]: duration: dcos.http._request: 1.07s
[2019-08-15 22:44:02,887|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:02,888|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:03,892|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:03,894|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:04,997|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:04,998|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:04 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:04,998|dcos.util|DEBUG]: duration: dcos.http._request: 1.11s
[2019-08-15 22:44:04,998|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:04,998|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:06,001|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:06,003|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:06,857|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:06,858|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:06 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:06,858|dcos.util|DEBUG]: duration: dcos.http._request: 0.86s
[2019-08-15 22:44:06,859|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:06,859|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:07,862|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:07,864|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:08,786|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:08,787|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:08 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:08,787|dcos.util|DEBUG]: duration: dcos.http._request: 0.92s
[2019-08-15 22:44:08,787|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:08,787|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:09,791|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:09,793|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:10,737|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:10,738|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:10 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:10,738|dcos.util|DEBUG]: duration: dcos.http._request: 0.95s
[2019-08-15 22:44:10,738|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:10,738|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:11,742|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:11,744|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:12,601|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:12,602|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:12 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:12,603|dcos.util|DEBUG]: duration: dcos.http._request: 0.86s
[2019-08-15 22:44:12,603|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:12,603|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:13,607|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:13,608|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:14,494|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:14,495|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:14 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:14,495|dcos.util|DEBUG]: duration: dcos.http._request: 0.89s
[2019-08-15 22:44:14,495|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:14,495|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:15,499|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:15,500|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:16,363|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:16,364|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:16 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:16,364|dcos.util|DEBUG]: duration: dcos.http._request: 0.87s
[2019-08-15 22:44:16,365|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:16,365|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:17,369|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:17,372|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:18,087|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:18,090|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:17 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:18,091|dcos.util|DEBUG]: duration: dcos.http._request: 0.72s
[2019-08-15 22:44:18,091|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:18,092|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:19,099|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:19,104|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:19,946|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:19,947|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:19 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:19,947|dcos.util|DEBUG]: duration: dcos.http._request: 0.85s
[2019-08-15 22:44:19,947|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:19,947|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

[2019-08-15 22:44:20,951|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:20,955|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
[2019-08-15 22:44:21,749|urllib3.connectionpool|DEBUG]: https://mwt19.scaletesting.mesosphe.re:443 "POST /service/jenkins2018/scriptText HTTP/1.1" 404 None
[2019-08-15 22:44:21,751|dcos.http|INFO]: Received HTTP response [404]: {'Date': 'Thu, 15 Aug 2019 22:44:21 GMT', 'Content-Type': 'application/octet-stream', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'openresty'}
[2019-08-15 22:44:21,751|dcos.util|DEBUG]: duration: dcos.http._request: 0.80s
[2019-08-15 22:44:21,751|sdk_cmd|INFO]: Got 404 for POST /service/jenkins2018/scriptText (args: ['data'])
[2019-08-15 22:44:21,751|sdk_cmd|INFO]: Response content (34 bytes):
404 Not Found: service not found.

^C^C

[33m[1m======================== 16 deselected in 61.78 seconds ========================[0m
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/_pytest/main.py", line 203, in wrap_session
    session.exitstatus = doit(config, session) or 0
  File "/usr/local/lib/python3.6/dist-packages/_pytest/main.py", line 243, in _main
    config.hook.pytest_runtestloop(session=session)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py", line 284, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 68, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 62, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 208, in _multicall
    return outcome.get_result()
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/main.py", line 264, in pytest_runtestloop
    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py", line 284, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 68, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 62, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 208, in _multicall
    return outcome.get_result()
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 78, in pytest_runtest_protocol
    runtestprotocol(item, nextitem=nextitem)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 93, in runtestprotocol
    reports.append(call_and_report(item, "call", log))
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 173, in call_and_report
    call = call_runtest_hook(item, when, **kwds)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 198, in call_runtest_hook
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 226, in from_call
    result = func()
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 198, in <lambda>
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py", line 284, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 68, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 62, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 208, in _multicall
    return outcome.get_result()
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/runner.py", line 123, in pytest_runtest_call
    item.runtest()
  File "/usr/local/lib/python3.6/dist-packages/_pytest/python.py", line 1357, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py", line 284, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 68, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 62, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 208, in _multicall
    return outcome.get_result()
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/python.py", line 165, in pytest_pyfunc_call
    testfunction(**testargs)
  File "/build/tests/scale/test_load.py", line 345, in test_scaling_load
    scenario,
  File "/build/tests/scale/test_load.py", line 220, in _create_jobs_stage
    thread_failures = _wait_and_get_failures(job_threads, timeout=JOB_RUN_TIMEOUT)
  File "/build/tests/scale/test_load.py", line 642, in _wait_and_get_failures
    timeout_failures = _wait_on_threads(thread_list, **kwargs)
  File "/build/tests/scale/test_load.py", line 627, in _wait_on_threads
    thread.join(timeout=remaining)
  File "/usr/lib/python3.6/threading.py", line 1060, in join
    self._wait_for_tstate_lock(timeout=max(timeout, 0))
  File "/usr/lib/python3.6/threading.py", line 1072, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/bin/py.test", line 11, in <module>
    sys.exit(main())
  File "/usr/local/lib/python3.6/dist-packages/_pytest/config/__init__.py", line 80, in main
    return config.hook.pytest_cmdline_main(config=config)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py", line 284, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 68, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 62, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 208, in _multicall
    return outcome.get_result()
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/main.py", line 236, in pytest_cmdline_main
    return wrap_session(config, _main)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/main.py", line 215, in wrap_session
    config.hook.pytest_keyboard_interrupt(excinfo=excinfo)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py", line 284, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 68, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/pluggy/manager.py", line 62, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 208, in _multicall
    return outcome.get_result()
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/usr/local/lib/python3.6/dist-packages/pluggy/callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/terminal.py", line 651, in pytest_keyboard_interrupt
    self._keyboardinterrupt_memo = excinfo.getrepr(funcargs=True)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py", line 557, in getrepr
    return fmt.repr_excinfo(self)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py", line 807, in repr_excinfo
    reprtraceback = self.repr_traceback(excinfo)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py", line 752, in repr_traceback
    reprentry = self.repr_traceback_entry(entry, einfo)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py", line 697, in repr_traceback_entry
    source = self._getentrysource(entry)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py", line 617, in _getentrysource
    source = entry.getsource(self.astcache)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py", line 232, in getsource
    self.lineno, source, astnode=astnode
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/source.py", line 298, in getstatementrange_ast
    start, end = get_statement_startend2(lineno, astnode)
  File "/usr/local/lib/python3.6/dist-packages/_pytest/_code/source.py", line 271, in get_statement_startend2
    for x in ast.walk(node):
  File "/usr/lib/python3.6/ast.py", line 225, in walk
    todo.extend(iter_child_nodes(node))
KeyboardInterrupt
[2019-08-15 22:44:22,755|dcos.http|INFO]: Sending HTTP ['POST'] to ['https://mwt19.scaletesting.mesosphe.re/service/jenkins2018/scriptText']: {'Accept': 'application/json'}
[2019-08-15 22:44:22,757|urllib3.connectionpool|DEBUG]: Starting new HTTPS connection (1): mwt19.scaletesting.mesosphe.re:443
^CException ignored in: <module 'threading' from '/usr/lib/python3.6/threading.py'>
Traceback (most recent call last):
  File "/usr/lib/python3.6/threading.py", line 1294, in _shutdown
    t.join()
  File "/usr/lib/python3.6/threading.py", line 1056, in join
    self._wait_for_tstate_lock()
  File "/usr/lib/python3.6/threading.py", line 1072, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
